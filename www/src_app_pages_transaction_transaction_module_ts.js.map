{"version":3,"sources":["./src/app/pages/transaction/transaction-routing.module.ts","./src/app/pages/transaction/transaction.module.ts","./src/app/pages/transaction/transaction.page.ts","./src/app/pages/transaction/transaction.page.scss","./src/app/pages/transaction/transaction.page.html"],"names":[],"mappings":"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","file":"src_app_pages_transaction_transaction_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionPage } from './transaction.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionPageRoutingModule } from './transaction-routing.module';\n\nimport { TransactionPage } from './transaction.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    TransactionPageRoutingModule\n  ],\n  declarations: [TransactionPage]\n})\nexport class TransactionPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgZone } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { Validators }           from '@angular/forms';\n\nimport { AlertController }               from '@ionic/angular';\nimport { LoadingController }    from '@ionic/angular';\nimport { ToastController }      from '@ionic/angular';\n\nimport { BluetoothResponse }    from '../../models/bluetooth-message';\n\nimport { ConfigurationService } from '../../providers/configuration-service';\nimport { PlantService }         from '../../providers/plant-service';\nimport { TankService }         from '../../providers/tank-service';\nimport { TransactionService }   from '../../providers/transaction-service';\nimport { OperatorService }      from '../../providers/operator-service';\nimport { TimesheetService }     from '../../providers/timesheet-service';\nimport { BluetoothService }     from '../../providers/bluetooth-service';\nimport { Events }               from '../../providers/events-service';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.page.html',\n  styleUrls: ['./transaction.page.scss'],\n})\nexport class TransactionPage implements OnInit {\n\n\n    public transactionForm: FormGroup;\n\n    private operator: any;\n    public tanks:Array<any>;\n    public plants:Array<any>;\n    \n    protected onMeterData:Function;\n    protected onMeterComplete:Function;\n    protected onMeterListing:Function;\n    protected onMeterListingSelect:Function;\n    protected onMeterListingSelected:Function;\n    protected onMeterReading:Function;\n    protected onMeterConnecting:Function;\n    protected onMeterConnected:Function;\n    protected loader:any;\n    \n\n    constructor(\n        protected builder: FormBuilder,\n        protected loadingController: LoadingController,\n        protected toastController: ToastController,\n        protected configurationService: ConfigurationService,\n        protected plantService: PlantService,\n        protected tankService: TankService,\n        protected transactionService: TransactionService,\n        protected operatorService: OperatorService,\n        protected timesheetService: TimesheetService,\n        protected bluetoothService: BluetoothService,\n\n        protected events: Events,\n\n        private zone: NgZone,\n        private geolocation: Geolocation\n        ) {\n        \n        this.tanks = [];\n        this.plants = [];\n        this.operator = {};\n        \n\n        this.transactionForm = builder.group({\n            'driver_name':              new FormControl('',     Validators.required),\n            'trailer_id':               new FormControl(''),\n            'plant_id':                 new FormControl('',     Validators.required),\n            'start_value':              new FormControl(''),\n            'end_value':                new FormControl(''),\n            'transaction_end_date':     new FormControl(''),\n        })\n\n\n        \n        this.events.subscribe('plants:loaded', \n            event => this.populatePlants(event)\n        );\n        this.populatePlants(null);        \n\n        this.configurationService.get('operator').then(operator => {\n            console.log('[CreateTransactionPage] - constructor() :: operator:', operator);\n            this.operator = operator;\n\t\t\tconsole.log(operator);\n            this.transactionForm.patchValue({ driver_name: `${this.operator.first_name}` });\n        });\n        \n        \n        this.configurationService.get('plant').then(plant_id => {\n            console.log('[CreateTransactionPage] - constructor() :: plant_id:', plant_id);\n            this.transactionForm.patchValue({ plant_id: plant_id });\n        });\n        \n        \n        this.onMeterData = (responses) => {\n            this._onMeterData(responses);\n        };\n        this.onMeterComplete = () => {\n            this._onMeterComplete();\n        };\n\n        this.onMeterListing = (event) => {\n            this.loader.setContent('Listing meters.');\n        }\n        this.onMeterListingSelect = (event) => {\n            this.loader.dismiss();\n        }    \n        this.onMeterListingSelected = (event) => {\n            this.loader.present();\n            this.loader.setContent('Meter Selected.');\n        }               \n        this.onMeterConnecting = (event) => {\n            this.loader.setContent('Connecting to meter.');\n        }\n        this.onMeterConnected = (event) => {\n            this.loader.setContent('Connected to meter.');\n        }\n        this.onMeterReading = (event) => {\n            this.loader.setContent('Reading data.');\n        }          \n        \n        \n    }\n    \n    \n    ngOnInit() {\n    }\n    \n    \n    private populatePlants(events:any)\n    {\n        console.log(`[CreateTransactionPage] - populatePlants() :: Attempt to load plants from cache, with mode ${events}`);\n        this.plantService.findAll().then(\n            data => {\n                console.log(`[CreateTransactionPage] - populatePlants() :: Found ${data.res.rows.length} plants in cache.`);\n                this.plants = [];\n                for(let i = 0; i < data.res.rows.length; i++) {\n                    this.plants.push({\n                        \"plant_id\": data.res.rows.item(i).plant_id,\n                        \"tail_no\":  data.res.rows.item(i).tail_no,\n                    });\n                }\n                console.log(`[CreateTransactionPage] - populatePlants() :: Plants found are ${this.plants}`);\n            }\n        );\n    }\n\n\n    public openSettings(event) {\n        console.log('[CreateTransactionPage] - openSettings()');\n        this.events.publish('settings:open', event);\n    }\n    \n    \n    public readMeter(event) {\n        console.log('[CreateTransactionPage] - readMeter() :: ');\n        \n        this.events.subscribe('meter:listing',  (data) => {\n            this.onMeterListing();\n        });\n        this.events.subscribe('meter:listingselect',  (data) => {\n                this.onMeterListingSelect();\n        });\n        this.events.subscribe('meter:connecting',  (data) => {\n             this.onMeterConnecting();\n        });\n        this.events.subscribe('meter:connected',  (data) => {\n              this.onMeterConnected();\n        });\n        this.events.subscribe('meter:reading',   (data) => {\n               this.onMeterReading();\n        });\n        this.events.subscribe('meter:complete',  (data) => {\n               this.onMeterComplete();\n        });\n        this.events.subscribe('meter:data',   (data) => {\n                  this.onMeterData();\n        });\n\n        this.loader = this.loadingController.create({\n            message: 'Contacting meter.'\n        }).then((el) => {\n            this.loader = el;\n            this.loader.present();\n        });\n\n        this.bluetoothService.list();\n    }\n\n    public _onMeterComplete():void {\n        //this.events.unsubscribe('meter:complete',   this.onMeterComplete);\n        this.loader.dismiss();\n    }\n\n    public _onMeterData(responses:Array<BluetoothResponse>):void {\n\n        console.log('[CreateTransactionPage] - _onMeterData() :: ', responses);\n\n        // Unsubscribe of further BT data until the Read button pushed again\n        this.events.unsubscribe('meter:data',    (data) => {\n            this.onMeterData\n            });\n        this.events.unsubscribe('meter:listing',    (data) => {\n              this.onMeterListing();\n        });\n        this.events.unsubscribe('meter:connecting',  (data) => {\n             this.onMeterConnecting();\n        });\n        this.events.unsubscribe('meter:connected',  (data) => {\n              this.onMeterConnected();\n        });\n        this.events.unsubscribe('meter:reading',   (data) => {\n               this.onMeterReading();\n        });\n\n        // Grab the last response, which is the current one, and write it to the UI\n        let response = responses.pop();\n\n        if(!response) {\n            console.warn('[CreateTransactionPage] - _onMeterData() :: Received empty response, exiting.', response);\n            return ;\n        }\n\n        this.zone.run(() => {\n            this.transactionForm.patchValue({ trailer_id:               response.getData().meterID });\n            this.transactionForm.patchValue({ start_value:              response.getData().startVolume });\n            this.transactionForm.patchValue({ end_value:                response.getData().endVolume });\n            this.transactionForm.patchValue({ transaction_end_date:     response.getData().endDateTime });\n        });\n\n        // The rest should be stored and uploaded to the API in the background, with blanking out data we don't know\n        responses.forEach(element => {\n            console.log('[CreateTransactionPage] - _onMeterData() :: Got BT data to upload in the background');\n            let transaction = {\n                pad_id:                 '-1',\n                operator_id:            this.operator.operator_id,\n                battery_percentage:     '-1',\n                long:                   -1,\n                lat:                    -1,\n                transaction_end_date:   element.getData().endDateTime,\n                end_total_value:        element.getData().endVolume,\n                end_value:              element.getData().startVolume,\n                plant_id:               this.transactionForm.controls['plant_id'].value,\n                trailer_id:             response.getData().meterID,\n                odometer:               '-1'\n            };\n            this.transactionService.create( transaction );            \n        });\n        \n        this.onSubmit(this.transactionForm.value);\n    }\n\n \n    \n    \n    \n\n    public onSubmit(data) {\n        console.log('[CreateTransactionPage] - onSubmit() :: Attempt to create transaction from data ', data)\n\n        this.configurationService.set('plant', data.plant_id);\n\n        let timestampDate = new Date(); \n        let timestamp = timestampDate.getDate() + \"/\"\n                        + (timestampDate.getMonth()+1)  + \"/\" \n                        + timestampDate.getFullYear() + \" \"  \n                        + timestampDate.getHours() + \":\"  \n                        + timestampDate.getMinutes() + \":\" \n                        + timestampDate.getSeconds();\n\n        let transaction = {\n            pad_id:                 '-1',\n            operator_id:            this.operator.operator_id,\n            battery_percentage:     '-1',\n            long:                   -1,\n            lat:                    -1,\n            transaction_end_date:   data.transaction_end_date,\n            end_total_value:        data.end_value,\n            end_value:              data.start_value,\n            plant_id:               data.plant_id,\n            trailer_id:             data.trailer_id,\n            odometer:               '-1',\n            local_timestamp: timestamp\n        };\n\n\n        let location_request = this.geolocation.getCurrentPosition({timeout:10000});\n        location_request.then(\n            (response) => {\n                console.log('[CreateTransactionPage] - onSubmit() :: Got geolocation data, creating transaction ', data)\n                transaction.long = response.coords.longitude;\n                transaction.lat = response.coords.latitude;\n                this.createTransaction(transaction);\n            },\n            (failure) => {\n                console.log('[CreateTransactionPage] - onSubmit() :: Failed to get geolocation ', data)\n                this.createTransaction(transaction);\n            }\n        ).catch(() => {\n            this.createTransaction(transaction);\n        });\n    }\n    \n    \n    public getGPS(){\n        let location_request = this.geolocation.getCurrentPosition({timeout:10000});\n        location_request.then(\n            (response) => {\n                let res = JSON.stringify(response);\n                console.log(response);\n            },\n            (failure) => {\n                console.log(failure);\n                let fail = JSON.stringify(failure);\n            }\n        ).catch((e) => {\n                console.log(e);\n        });        \n    }  \n    \n    \n    private createTransaction(transaction){\n        this.transactionService.create(transaction).then(\n            result => {\n                this.transactionForm.patchValue({ start_value: null });\n                this.transactionForm.patchValue({ end_value: null });\n                this.transactionForm.patchValue({ trailer_id: null });\n\n                this.toastController.create({\n                    message: 'Transaction saved!',\n                    duration: 2000\n                }).then((el) => {\n                    el.present();\n                });\n\n            },\n            failure => {\n                this.toastController.create({\n                    message: 'Error saving transaction!',\n                    duration: 2000,\n                    cssClass: 'toast-error'\n                }).then((el) => {\n                    el.present();\n                });\n            }\n        );        \n    }\n    \n    public aircraftChanged(){\n       this.toastController.create({\n            message: 'Aircraft Changed',\n            duration: 2000\n        }).then((el) => {\n                    el.present();\n                });      \n    }    \n    \n      \n\n}\n\n","export default \".form ion-button {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FBQ0oiLCJmaWxlIjoidHJhbnNhY3Rpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0gaW9uLWJ1dHRvbntcclxuICAgIG1hcmdpbi10b3A6MjBweDtcclxufSJdfQ== */\";","export default \"<ion-header>\\n\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title>Transactions</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button color=\\\"light\\\" (click)=\\\"openSettings($event)\\\" >\\n                <ion-icon name=\\\"settings\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n  \\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding form\\\" scroll=\\\"false\\\">\\n    <ion-list>\\n        <form [formGroup]=\\\"transactionForm\\\" (ngSubmit)=\\\"onSubmit(transactionForm.value)\\\">\\n\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Operator</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"driver_name\\\" readonly=\\\"true\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Aircraft number</ion-label>\\n                <ion-select formControlName=\\\"plant_id\\\" (ionChange)=\\\"aircraftChanged()\\\">\\n                    <ion-select-option *ngFor=\\\"let plant of plants\\\" value=\\\"{{plant.plant_id}}\\\">{{plant.tail_no}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Loader number</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"trailer_id\\\" readonly=\\\"true\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label position=\\\"fixed\\\">Start value</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"start_value\\\" readonly=\\\"true\\\"></ion-input>            \\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label position=\\\"fixed\\\">End value</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"end_value\\\" readonly=\\\"true\\\"></ion-input>\\n            </ion-item>\\n\\n                <ion-input class=\\\"hide-input\\\" type=\\\"hidden\\\" formControlName=\\\"transaction_end_date\\\" readonly=\\\"true\\\"></ion-input>\\n \\n            <ion-button fill=\\\"outline\\\"  (click)=\\\"readMeter($event)\\\"  expand=\\\"block\\\" [disabled]=\\\"!transactionForm.valid\\\">Fuelling Completed</ion-button>\\n\\n\\n        </form>\\n\\n    </ion-list>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}