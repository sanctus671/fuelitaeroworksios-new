{"version":3,"sources":["./src/app/pages/tanktotank/tanktotank-routing.module.ts","./src/app/pages/tanktotank/tanktotank.module.ts","./src/app/pages/tanktotank/tanktotank.page.ts","./src/app/pages/tanktotank/tanktotank.page.scss","./src/app/pages/tanktotank/tanktotank.page.html"],"names":[],"mappings":"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","file":"src_app_pages_tanktotank_tanktotank_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TanktotankPage } from './tanktotank.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TanktotankPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TanktotankPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TanktotankPageRoutingModule } from './tanktotank-routing.module';\n\nimport { TanktotankPage } from './tanktotank.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    TanktotankPageRoutingModule\n  ],\n  declarations: [TanktotankPage]\n})\nexport class TanktotankPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgZone } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { Validators }           from '@angular/forms';\n\nimport { AlertController }               from '@ionic/angular';\nimport { LoadingController }    from '@ionic/angular';\nimport { ToastController }      from '@ionic/angular';\n\nimport { BluetoothResponse }    from '../../models/bluetooth-message';\n\nimport { ConfigurationService } from '../../providers/configuration-service';\nimport { PlantService }         from '../../providers/plant-service';\nimport { TankService }         from '../../providers/tank-service';\nimport { TransactionService }   from '../../providers/transaction-service';\nimport { OperatorService }      from '../../providers/operator-service';\nimport { TimesheetService }     from '../../providers/timesheet-service';\nimport { BluetoothService }     from '../../providers/bluetooth-service';\nimport { Events }               from '../../providers/events-service';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n\n@Component({\n  selector: 'app-tanktotank',\n  templateUrl: './tanktotank.page.html',\n  styleUrls: ['./tanktotank.page.scss'],\n})\nexport class TanktotankPage {\n\n    public tankToTankForm: FormGroup;\n\n    private operator: any;\n    public tanks:Array<any>;\n    \n    protected onMeterData:Function;\n    protected onMeterComplete:Function;\n    protected onMeterListing:Function;\n    protected onMeterListingSelect:Function;\n    protected onMeterListingSelected:Function;\n    protected onMeterReading:Function;\n    protected onMeterConnecting:Function;\n    protected onMeterConnected:Function;\n    protected loader:any;    \n    \n\n\n    constructor(\n        protected builder: FormBuilder,\n        protected loadingController: LoadingController,\n        protected toastController: ToastController,\n        protected configurationService: ConfigurationService,\n        protected plantService: PlantService,\n        protected tankService: TankService,\n        protected transactionService: TransactionService,\n        protected operatorService: OperatorService,\n        protected timesheetService: TimesheetService,\n        protected bluetoothService: BluetoothService,\n\n        protected events: Events,\n\n        private zone: NgZone,\n        private geolocation: Geolocation\n        ) {\n\n        this.tankToTankForm = builder.group({\n            'from_trailer_id':         new FormControl('', Validators.required),\n            'to_trailer_id':         new FormControl('', Validators.required),\n            'amount': new FormControl(''),\n        })\n\n\n        this.events.subscribe('tanks:loaded', \n            event => this.populateTanks(event)\n        );\n        this.populateTanks(null);\n\n        configurationService.get('operator').then(operator => {\n            this.operator = operator;\n        })\n\n        this.configurationService.get('tank').then(trailer_id => {\n            console.log('[CreateTankToTankPage] - constructor() :: trailer_id: ', trailer_id);\n            this.tankToTankForm.patchValue({ from_trailer_id: trailer_id });\n        });\n        \n        \n        this.onMeterData = (responses) => {\n            this._onMeterData(responses);\n        };\n        this.onMeterComplete = () => {\n            this._onMeterComplete();\n        };\n\n        this.onMeterListing = (event) => {\n            this.loader.setContent('Listing meters.');\n        }\n        this.onMeterListingSelect = (event) => {\n            this.loader.dismiss();\n        }    \n        this.onMeterListingSelected = (event) => {\n            this.loader.present();\n            this.loader.setContent('Meter Selected.');\n        }               \n        this.onMeterConnecting = (event) => {\n            this.loader.setContent('Connecting to meter.');\n        }\n        this.onMeterConnected = (event) => {\n            this.loader.setContent('Connected to meter.');\n        }\n        this.onMeterReading = (event) => {\n            this.loader.setContent('Reading data.');\n        }          \n        \n        \n    }\n\n    private populateTanks(events:any)\n    {\n        console.log(`[CreateTankToTankPage] - populateTanks() :: Attempt to load tanks from cache, with mode ${events}`);\n        this.tankService.findAll().then(\n            data => {\n                console.log(`[CreateTankToTankPage] - populateTanks() :: Found ${data.res.rows.length} tanks in cache.`);\n                this.tanks = [];\n                for(let i = 0; i < data.res.rows.length; i++) {\n                    this.tanks.push({\n                        \"trailer_id\": data.res.rows.item(i).trailer_id,\n                        \"trailer_no\":  data.res.rows.item(i).trailer_no,\n                        \"trailer_name\":  data.res.rows.item(i).trailer_name,\n                    });\n                }\n                console.log(`[CreateTankToTankPage] - populateTanks() :: Tanks found are ${this.tanks}`);\n            }\n        );\n    }\n\n    public openSettings(event) {\n        console.log('[CreateTankToTankPage] - openSettings()');\n        this.events.publish('settings:open', event);\n    }\n    \n    \n    public readMeter(event) {\n        console.log('[CreateTransactionPage] - readMeter() :: ');\n        \n        this.events.subscribe('meter:listing',  (data) => {\n            this.onMeterListing();\n        });\n        this.events.subscribe('meter:listingselect',  (data) => {\n                this.onMeterListingSelect();\n        });\n        this.events.subscribe('meter:connecting',  (data) => {\n             this.onMeterConnecting();\n        });\n        this.events.subscribe('meter:connected',  (data) => {\n              this.onMeterConnected();\n        });\n        this.events.subscribe('meter:reading',   (data) => {\n               this.onMeterReading();\n        });\n        this.events.subscribe('meter:complete',  (data) => {\n               this.onMeterComplete();\n        });\n        this.events.subscribe('meter:data',   (data) => {\n                  this.onMeterData();\n        });\n\n        this.loadingController.create({             \n            message: 'Contacting meter.'}).then((el) => {\n            this.loader = el;\n            this.loader.present();\n        });\n\n        this.bluetoothService.list();\n    }\n\n    public _onMeterComplete():void {\n        //this.events.unsubscribe('meter:complete',   this.onMeterComplete);\n        this.loader.dismiss();\n    }\n\n    public _onMeterData(responses:Array<BluetoothResponse>):void {\n\n        console.log('[CreateTransactionPage] - _onMeterData() :: ', responses);\n\n        // Unsubscribe of further BT data until the Read button pushed again\n        this.events.unsubscribe('meter:data',    (data) => {\n            this.onMeterData();\n            });\n        this.events.unsubscribe('meter:listing',    (data) => {\n              this.onMeterListing();\n        });\n        this.events.unsubscribe('meter:connecting',  (data) => {\n             this.onMeterConnecting();\n        });\n        this.events.unsubscribe('meter:connected',  (data) => {\n              this.onMeterConnected();\n        });\n        this.events.unsubscribe('meter:reading',   (data) => {\n               this.onMeterReading();\n        });\n\n        // Grab the last response, which is the current one, and write it to the UI\n        let response = responses.pop();\n\n        if(!response) {\n            console.warn('[CreateTransactionPage] - _onMeterData() :: Received empty response, exiting.', response);\n            return ;\n        }\n\n        this.zone.run(() => {\n            \n            let amount = (response.getData().endVolume - response.getData().startVolume);\n            \n            //this.tankToTankForm.patchValue({ from_trailer_id:               response.getData().meterID });\n            this.tankToTankForm.patchValue({ amount:              amount });\n        });\n\n        // The rest should be stored and uploaded to the API in the background, with blanking out data we don't know\n        responses.forEach(element => {\n            console.log('[CreateTransactionPage] - _onMeterData() :: Got BT data to upload in the background');\n            let transaction = {\n                pad_id:                 '-1',\n                operator_id:            this.operator.operator_id,\n                battery_percentage:     '-1',\n                long:                   -1,\n                lat:                    -1,\n                transaction_end_date:   element.getData().endDateTime,\n                end_total_value:        element.getData().endVolume,\n                end_value:              element.getData().startVolume,\n                plant_id:               null,\n                trailer_id:             response.getData().meterID,\n                odometer:               '-1'\n            };\n            this.transactionService.create( transaction );            \n        });\n        \n        this.onSubmit(this.tankToTankForm.value);\n    }\n\n \n    \n    \n    \n\n    public onSubmit(data) {\n        console.log('[CreateTankToTankPage] - onSubmit() :: Attempt to create TankToTank from data ', data)\n        let refill = {\n            from_trailer_id:           data.from_trailer_id,\n            to_trailer_id:           data.to_trailer_id,\n            operator_id:        this.operator.operator_id,\n            amount:         data.amount\n        }\n        this.transactionService.createRefill(refill).then(\n            (result) => {\n\n                this.toastController.create({\n                    message: 'Transaction saved!',\n                    duration: 2000\n                }).then((el) => {\n                    el.present();\n                });\n                \n                \n                this.tankToTankForm.patchValue({ from_trailer_id: null });\n                this.tankToTankForm.patchValue({ to_trailer_id: null });\n                this.tankToTankForm.patchValue({ amount: null });\n            }          \n        ).catch((e) => {\n\t\t\t\n\t\t\t\t//alert(e);\n\t\t\t\t//alert(JSON.stringify(e));\t\n\n\n                this.toastController.create({\n                    message: 'Error saving transaction!',\n                    duration: 2000,\n                    cssClass: 'toast-error'\n                }).then((el) => {\n                    el.present();\n                });\n        });\n    }\n    \n    \n    public getGPS(){\n        let location_request = this.geolocation.getCurrentPosition({timeout:10000});\n        location_request.then(\n            (response) => {\n                let res = JSON.stringify(response);\n                console.log(response);\n            },\n            (failure) => {\n                console.log(failure);\n                let fail = JSON.stringify(failure);\n            }\n        ).catch((e) => {\n                console.log(e);\n        });        \n    }    \n\n}\n\n","export default \".form ion-button {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhbmt0b3RhbmsucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7QUFDSiIsImZpbGUiOiJ0YW5rdG90YW5rLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtIGlvbi1idXR0b257XHJcbiAgICBtYXJnaW4tdG9wOjIwcHg7XHJcbn0iXX0= */\";","export default \"<ion-header>\\n\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title>Tank to Tank</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button color=\\\"light\\\" (click)=\\\"openSettings($event)\\\" >\\n                <ion-icon name=\\\"settings\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n  \\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding form\\\">\\n    <ion-list>\\n\\n        <form [formGroup]=\\\"tankToTankForm\\\" (ngSubmit)=\\\"onSubmit(tankToTankForm.value)\\\">\\n               \\n\\n            <ion-item>\\n                <ion-label floating>From Tank</ion-label>\\n                <ion-select formControlName=\\\"from_trailer_id\\\">\\n                    <ion-select-option *ngFor=\\\"let tank of tanks\\\" value=\\\"{{tank.trailer_id}}\\\">{{tank.trailer_name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label floating>To Tank</ion-label>\\n                <ion-select formControlName=\\\"to_trailer_id\\\">\\n                    <ion-select-option *ngFor=\\\"let tank of tanks\\\" value=\\\"{{tank.trailer_id}}\\\">{{tank.trailer_name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>            \\n            \\n            \\n            <ion-item>\\n                <ion-label>Amount (L)</ion-label>\\n                <ion-input type=\\\"number\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\" readonly=\\\"true\\\"></ion-input>\\n            </ion-item>\\n\\n     \\n            \\n            \\n            <ion-button fill=\\\"outline\\\"  (click)=\\\"readMeter($event)\\\"  expand=\\\"block\\\" [disabled]=\\\"!tankToTankForm.valid\\\">Transfer Completed</ion-button>\\n\\n            \\n            \\n            \\n            \\n            \\n        </form>\\n\\n    </ion-list>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}